{"ast":null,"code":"import _defineProperty from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/azharuddin/Documents/btpn/testbtpn/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/azharuddin/Documents/btpn/testbtpn/client/src/App.js\";\n// import * as React  from 'react';\n// import { React ,Component} from 'react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Modal } from 'react-modal';\nimport Validation from 'react-validation';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      users: [],\n      modalIsOpen: false,\n      name: '',\n      email: '',\n      msg: '',\n      customers: [],\n      id: 0\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.logChange = _this.logChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); // We capture the value and change state as user changes the value here.\n\n    _this.handleEdit = _this.handleEdit.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Function where we submit data\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"openModal\",\n    value: function openModal(member) {\n      this.setState({\n        modalIsOpen: true,\n        title: member.title,\n        content: member.content,\n        _id: member._id\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"logChange\",\n    value: function logChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(event) {\n      //Edit functionality\n      event.preventDefault();\n      var data = {\n        title: this.state.title,\n        content: this.state.content,\n        _id: this.state._id\n      };\n      alert(data); // fetch(\"/notes/edit\", {\n      //     method: 'POST',\n      //     headers: {\n      //         'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify(data)\n      // }).then(function(response) {\n      //     if (response.status >= 400) {\n      //         throw new Error(\"Bad response from server\");\n      //     }\n      //     return response.json();\n      // }).then(function(data) {\n      //     console.log(data)\n      //     if (data === \"success\") {\n      //         this.setState({\n      //             msg: \"User has been edited.\"\n      //         });\n      //     }\n      // }).catch(function(err) {\n      //     console.log(err)\n      // });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.allData();\n    }\n  }, {\n    key: \"allData\",\n    value: function allData() {\n      var _this2 = this;\n\n      fetch('/notes').then(function (res) {\n        return res.json();\n      }).then(function (customers) {\n        return _this2.setState({\n          customers: customers\n        }, function () {\n          return console.log('customer load ...', customers);\n        });\n      });\n    }\n  }, {\n    key: \"deleteMember\",\n    value: function deleteMember(_id) {\n      fetch(\"/notes/\" + _id, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        this.allData();\n      }).then(function (data) {\n        if (data === \"success\") {\n          this.setState({\n            msg: \"User has been deleted.\"\n          });\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Customers\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"content\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"createdAt\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"updatedAt\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.customers.map(function (customer) {\n        return React.createElement(\"tr\", {\n          key: customer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, customer.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, customer.content), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, customer.createdAt), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, customer.updatedAt), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.openModal(customer);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.deleteMember(customer._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Edit\")));\n      }), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onRequestClose: this.closeModal,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Validation.components.Form, {\n        onSubmit: this.handleEdit,\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Validation.components.Input, {\n        onChange: this.logChange,\n        className: \"form-control\",\n        value: this.state.name,\n        placeholder: \"John\",\n        name: \"name\",\n        validations: ['required'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Validation.components.Input, {\n        onChange: this.logChange,\n        className: \"form-control\",\n        value: this.state.email,\n        placeholder: \"email@email.com\",\n        name: \"email\",\n        validations: ['required', 'email'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"submit-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Validation.components.Button, {\n        className: \"btn btn-uth-submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Submit\"))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/azharuddin/Documents/btpn/testbtpn/client/src/App.js"],"names":["React","Component","Modal","Validation","App","props","state","users","modalIsOpen","name","email","msg","customers","id","openModal","bind","closeModal","logChange","handleEdit","member","setState","title","content","_id","e","target","value","event","preventDefault","data","alert","allData","fetch","then","res","json","console","log","method","headers","response","catch","err","map","customer","createdAt","updatedAt","deleteMember"],"mappings":"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","sourcesContent":["// import * as React  from 'react';\n// import { React ,Component} from 'react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport {Modal} from 'react-modal';\nimport Validation from 'react-validation';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        users: [],\n        modalIsOpen: false,\n        name: '',\n        email: '',\n        msg: '',\n        customers:[],\n        id: 0\n    }\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.logChange = this.logChange.bind(this); // We capture the value and change state as user changes the value here.\n    this.handleEdit = this.handleEdit.bind(this); // Function where we submit data\n}\n\n\nopenModal(member) {\n  this.setState({\n      modalIsOpen: true,\n      title: member.title,\n      content: member.content,\n      _id: member._id\n  });\n}\n\ncloseModal() {\n  this.setState({\n      modalIsOpen: false\n  });\n}\n\nlogChange(e) {\n  this.setState({\n      [e.target.name]: e.target.value //setting value edited by the admin in state.\n  });\n}\nhandleEdit(event) {\n  //Edit functionality\n  event.preventDefault()\n  var data = {\n      title: this.state.title,\n      content: this.state.content,\n      _id: this.state._id\n  }\n  alert(data);\n  // fetch(\"/notes/edit\", {\n  //     method: 'POST',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(data)\n  // }).then(function(response) {\n  //     if (response.status >= 400) {\n  //         throw new Error(\"Bad response from server\");\n  //     }\n  //     return response.json();\n  // }).then(function(data) {\n  //     console.log(data)\n  //     if (data === \"success\") {\n  //         this.setState({\n  //             msg: \"User has been edited.\"\n  //         });\n  //     }\n  // }).catch(function(err) {\n  //     console.log(err)\n  // });\n}\n\ncomponentDidMount() {\n  this.allData();\n}\nallData()\n{\n  fetch('/notes')\n  .then(res =>res.json())\n  .then(customers=>this.setState({customers},()=>console.log('customer load ...',customers)));\n}\ndeleteMember(_id){\n  fetch(\"/notes/\"+_id, {\n      method: 'DELETE',\n      headers: {'Content-Type': 'application/json'},\n  }).then(function(response) {\n    this.allData();\n  }).then(function(data) {\n      if(data === \"success\"){\n         this.setState({msg: \"User has been deleted.\"});  \n      }\n  }).catch(function(err) {\n      console.log(err)\n  });\n}\nrender() {\n    return (\n      <div className=\"App\">\n          <div>\n        <h2>Customers</h2>\n        <form>\n          <input type=\"text\" / >\n        </form>\n        <table>\n            <thead>\n                <tr>\n                    <th>title</th>\n                    <th>content</th>\n                    <th>createdAt</th>\n                    <th>updatedAt</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n            {this.state.customers.map(customer=>\n                <tr  key={customer._id}>\n                    <td>{customer.title}</td>\n                    <td>{customer.content}</td>\n                    <td>{customer.createdAt}</td>\n                    <td>{customer.updatedAt}</td>\n                    <td>\n                    <button onClick={() => this.openModal(customer)}>Edit</button>\n                    <button onClick={() => this.deleteMember(customer._id)}>Edit</button>\n                    </td>\n                </tr>\n            )} \n            <Modal isOpen={this.state.modalIsOpen}  onRequestClose={this.closeModal}\n                            contentLabel=\"Example Modal\" >\n                        <Validation.components.Form onSubmit={this.handleEdit} method=\"POST\">\n                            <label>Name</label>\n                            <Validation.components.Input onChange={this.logChange} className=\"form-control\" value={this.state.name} placeholder='John' name='name' validations={['required']}/>\n                            <label>Email</label>\n                            <Validation.components.Input onChange={this.logChange} className=\"form-control\" value={this.state.email} placeholder='email@email.com' name='email' validations={['required', 'email']}/>\n                            <div className=\"submit-section\">\n                            <Validation.components.Button className=\"btn btn-uth-submit\">Submit</Validation.components.Button>\n                            </div>\n                        </Validation.components.Form>\n                        </Modal>\n            </tbody>\n        </table>\n           \n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}